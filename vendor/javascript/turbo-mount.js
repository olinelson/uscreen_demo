// turbo-mount@0.4.3 downloaded from https://ga.jspm.io/npm:turbo-mount@0.4.3/dist/turbo-mount.js

import{Controller as t,Application as o}from"@hotwired/stimulus";class TurboMountController extends t{constructor(){super(...arguments);this.skipPropsChangeCallback=false}connect(){this._umountComponentCallback||(this._umountComponentCallback=this.mountComponent(this.mountElement,this.resolvedComponent,this.componentProps))}disconnect(){this.umountComponent()}propsValueChanged(){if(this.skipPropsChangeCallback)this.skipPropsChangeCallback=false;else{this.umountComponent();this._umountComponentCallback||(this._umountComponentCallback=this.mountComponent(this.mountElement,this.resolvedComponent,this.componentProps))}}get componentProps(){return this.propsValue}get mountElement(){return this.hasMountTarget?this.mountTarget:this.element}get resolvedComponent(){return this.resolveMounted(this.componentValue).component}get resolvedPlugin(){return this.resolveMounted(this.componentValue).plugin}umountComponent(){this._umountComponentCallback?.();this._umountComponentCallback=void 0}mountComponent(t,o,n){return this.resolvedPlugin.mountComponent({el:t,Component:o,props:n})}resolveMounted(t){const o=this.application;return o.turboMount.resolve(t)}setComponentProps(t){this.skipPropsChangeCallback=true;this.propsValue=t}}TurboMountController.values={props:Object,component:String};TurboMountController.targets=["mount"];const n=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/_/g,"-").replace(/\//g,"--").toLowerCase();const e=t=>t.replace(/\.\w*$/,"").replace(/^[./]*components\//,"");const r=t=>{const o=n(t);return[`turbo-mount--${o}`,`turbo-mount-${o}`]};const s=t=>{if(t.endsWith("/index")){const o=t.replace(/\/index$/,"");return o||null}return null};class TurboMount{constructor(t={}){this.components=new Map;this.application=this.findOrStartApplication(t.application);this.application.turboMount=this;this.application.register("turbo-mount",TurboMountController);document.addEventListener("turbo:before-morph-element",(t=>{const o=t;const{target:n,detail:e}=o;if(n.getAttribute("data-controller")?.includes("turbo-mount")){n.setAttribute("data-turbo-mount-props-value",e.newElement.getAttribute("data-turbo-mount-props-value")||"{}");t.preventDefault()}}))}register(t,o,e,r){r||(r=TurboMountController);if(this.components.has(o))throw new Error(`Component '${o}' is already registered.`);this.components.set(o,{component:e,plugin:t});if(r){const t=`turbo-mount-${n(o)}`;this.application.register(t,r)}}resolve(t){const o=this.components.get(t);if(!o)throw new Error(`Unknown component: ${t}`);return o}findOrStartApplication(t){let n=t||window.Stimulus;if(!n){n=o.start();window.Stimulus=n}return n}}function u(t){return(o,n,e,r)=>{o.register(t,n,e,r)}}const l=({plugin:t,turboMount:o,components:n,controllers:r=[]})=>{const u=new Set;const l=[];for(const{filename:p,module:a}of n){const n=e(p);const c=a.default??a;i({plugin:t,turboMount:o,availableControllers:r,componentName:n,component:c});u.add(n);const m=s(n);m&&l.push({name:m,module:a})}for(const{name:n,module:e}of l)if(!u.has(n)){const s=e.default??e;i({plugin:t,turboMount:o,availableControllers:r,componentName:n,component:s});u.add(n)}};const i=({plugin:t,turboMount:o,availableControllers:n,componentName:e,component:s})=>{const u=r(e);const l=n.find((({identifier:t})=>u.includes(t)));l?o.register(t,e,s,l.controllerConstructor):o.register(t,e,s)};export{TurboMount,TurboMountController,u as buildRegisterFunction,l as registerComponentsBase};

